<apex:page showHeader="false" sidebar="false" standardStylesheets="false" title="Rearrest Letter">

    <script type="text/javascript">__sfdcSessionId = '{!$Api.Session_Id}';</script>
    <script src="../../soap/ajax/11.0/connection.js" type="text/javascript"></script>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">

<head>
<meta http-equiv="Content-Language" content="en-us" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>Rearrest Letter</title>

<style type="text/css">
.style1 {
    text-align: center;
}
.style2 {
    border: 1px solid #000000;
}
.defaultStyle {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 12px;
    font-weight: normal;
    font-style: normal;
    color: #000000;
}
.style3 {
    font-size: 16px;
}
.style4 {
    font-size: 14px;
}
.style5 {
    text-align: center;
    font-weight: bold;
}
.style6 {
    text-decoration: underline;
}
</style>

<!--

ID of the user loged in:
{!$User.Id}


-->

<!-- <link href="/sCSS/11.0/Theme2/common.css" type="text/css" media="handheld,print,projection,screen,tty,tv" rel="stylesheet" /> -->
<style type="text/css">
body
{
font-family: Arial, Helvetica, sans-serif;
font-size:13px;
}
td
{
padding: 5px 10px 5px 10px;
font-size:13px;
}
.small_text
{
font-size:14px;
}
.label
{
color:black;
text-align:right;
vertical-align:top;
}
.separator
{
color: black;
font-weight:bold;
width: 4px;
vertical-align: top;
}
.black_text
{
color: black;
font-weight:bold;
width: 150px;
vertical-align: top;
font-size:14px;
}
.gray_text
{
color: black;
}
</style>

<!-- AJAX Toolkit version 11.0 -->
<script type="text/javascript">
var case_info = '';

function formatNumber(num,dec,thou,pnt,curr1,curr2,n1,n2) 
{
    var x = Math.round(num * Math.pow(10,dec));if (x >= 0) n1=n2='';
    var y = (''+Math.abs(x)).split('');
    var z = y.length - dec; if (z<0) z--; 
    for(var i = z; i < 0; i++) 
    y.unshift('0');y.splice(z, 0, pnt); 
    if(y[0] == pnt) 
    y.unshift('0'); 
    while (z > 3) 
    {
        z-=3; 
        y.splice(z,0,thou);
    }
    var r = curr1+n1+y.join('')+n2+curr2;
    return r;
}

 

function getCurentDate()
{
    var months = new Array(13);
    months[0] = "January";
    months[1] = "February";
    months[2] = "March";
    months[3] = "April";
    months[4] = "May";
    months[5] = "June";
    months[6] = "July";
    months[7] = "August";
    months[8] = "September";
    months[9] = "October";
    months[10] = "November";
    months[11] = "December";
    var now = new Date();
    var monthnumber = now.getMonth();
    var monthname = months[monthnumber];
    var monthday = now.getDate();
    var year = now.getYear();
    if(year < 2000) { year = year + 1900; }
    var dateString = monthname +
    ' ' +
    monthday +
    ', ' +
    year;
    return dateString;
}

// Returns the current date in an SF Friendly format
function getSFNowDate()
{
    var now = new Date();
    var monthnumber = now.getMonth();
    monthnumber++;
    var monthnum = '';
    if(monthnumber < 10)
    {
        monthnum = '0' + monthnumber;
    }
    else
    {
        monthnum = monthnumber;
    }
    var monthday = now.getDate();
    if(monthday < 10)
    {
        monthday = '0' + monthday;
    }
    var year = now.getYear();
    if(year < 2000) { year = year + 1900; }
    var dateString = year + '-' + monthnum + '-' + monthday;
    return dateString;
}

// Takes an SF Date format and turns it into mm/dd/yyyy format
// SF date format is YYYY-MM-DD
function formatFromSFDate(inDate)
{
    return inDate.substring(5,7) + "/" + inDate.substring(8,10) + "/" + inDate.substring(0,4);
}

function getValue(table, field, id)
{
    try
    {
        var sql = sforce.connection.query("SELECT c."+field+" FROM "+table+" c WHERE c.Id = '"+id+"' LIMIT 1");
        if (sql.getBoolean("done") && sql.size!=0)
        {
            var recs = sql.getArray("records");
            return recs[0].get(field);
        }
        else
        {
            return "N/A"
        }
    }
    catch(Err)
    {
        // alert(Err); Uncomment to Alert the error
        return "N/A";
    }
}

function getContactDetails(id)
{

    var sql = sforce.connection.query("Select Id, Name, Court_Rep__c, Team_Leader__c, Gender_CC__c, CEP_Num__c, FirstName, LastName, Borough_of_Intake_Formula__c, Next_Court_Date__c, Intake_Case__r.Indictment__c from Contact WHERE Id = '"+id+"' LIMIT 1");

    if (sql.getBoolean("done") && sql.size!=0)
    {
        var rec = sql.getArray("records");
        contactRecord = rec[0];

        var client = new Array();

        // client['Name'] = rec[0].get('Name');
        // client['Court_Rep__c'] = getValue('User', 'Name', rec[0].get("Court_Rep__c"));
        // client['Team_Leader__c'] = getValue('User', 'Name', rec[0].get("Team_Leader__c"));
        // client['CEP_Num__c'] = rec[0].get('CEP_Num__c');
        // client['FirstName'] = rec[0].get('FirstName');
        // client['LastName'] = rec[0].get('LastName');
        // client['Borough_of_Intake__c'] = rec[0].get('Borough_of_Intake_Formula__c');

        client['Name'] = contactRecord.Name;
        // client['Court_Rep__c'] = getValue('User', 'Name', contactRecord.Court_Rep__c;
        // client['Team_Leader__c'] = getValue('User', 'Name', contactRecord.Team_Leader__c;
        client['CEP_Num__c'] = contactRecord.CEP_Num__c;
        client['FirstName'] = contactRecord.FirstName;
        client['LastName'] = contactRecord.LastName;
        client['Borough_of_Intake__c'] = contactRecord.Borough_of_Intake_Formula__c;

        contactRecord["Court_Rep__c"] = getValue('User', 'Name', contactRecord.get("Court_Rep__c"));
        contactRecord["Team_Leader__c"] = getValue('User', 'Name', contactRecord.get("Team_Leader__c"));

        if(contactRecord["Gender_CC__c"]=='Male')
        {
            contactRecord['gender']='Mr.';
        }
        else
        {
            if(contactRecord["Gender_CC__c"]=='Female')
            {
                contactRecord['gender']='Ms.';
                contactRecord['gender1'] = 'her';
            }
            else
            {
                contactRecord['gender']='';
                contactRecord['gender1'] = 'his';
            }
        }

        return contactRecord;
    }
    else
    {
        return "N/A"
    }
}

function getCharges(case_info)
{
    var sql = sforce.connection.query("Select c.Charge__c from Case_Charges__c c Where c.Docket_No__c = '"+case_info+"' AND c.Type__c = 'Criminal Court Arraignment Charges'");
    if (sql.getBoolean("done") && sql.size!=0)
    {
        var rec = sql.getArray("records");
        var charge_code= new Array();
        var i=0;
        for(i=0;i<rec.length;i++)
        {
            charge_code[i]=rec[i].get("Charge__c");
        }
        
        sql = sforce.connection.query("Select p.Name, p.Id from Penal_Code__c p Where p.Id IN ('"+charge_code.join("', '")+"') ");
        if (sql.getBoolean("done") && sql.size!=0)
        {
            var recs = sql.getArray("records");
            charge= new Array();
            for(i=0;i<recs.length;i++)
            {
                charge[recs[i].get('Id')] = recs[i].get('Name');
            }
        }
        var result='';
        for(i=0; i<charge_code.length;i++)
        {
            result=result + ', '+charge[charge_code[i]];
        }
        return result.substr(2);
    }
    else
    {
    return "N/A"
    }
}

function getChargesold(case_info)
{
    var sql = sforce.connection.query("Select c.Charge__c from Case_Charges__c c Where c.Docket_No__c = '"+case_info+"'");
    if (sql.getBoolean("done") && sql.size!=0)
    {
        var rec = sql.getArray("records");
        var charge='';
        for(i=0;i<rec.length;i++)
        {
            sql = sforce.connection.query("Select p.Name from Penal_Code__c p Where p.Id IN= '"+rec[i].get("Charge__c")+"' Limit 1");
            if (sql.getBoolean("done") && sql.size!=0)
            {
                var recs = sql.getArray("records");
                charge=charge+ ", "+recs[0].get("Name");
            }
        }
        return charge.substr(2);
    }
    else
    {
        return "N/A"
    }
}

function getPart(client_id, case_info, rearrest_date)
{

    // Reformat Date
    rearrest_date = new Date(rearrest_date);
    var rearrest_day = ("0" + rearrest_date.getDate()).slice(-2);
    var rearrest_month = ("0" + (rearrest_date.getMonth() + 1)).slice(-2);

    var rearrest_date_formatted = rearrest_date.getFullYear() + '-' + rearrest_month + '-' + rearrest_day;

    var sqlString = "Select e.Part__c, e.RecordTypeId, e.RecordType.Name, e.WhatId, e.ActivityDate from Event e Where e.WhatID = '"+case_info+"' AND e.WhoId = '"+client_id+"' and e.RecordType.Name = 'Court Date' And e.ActivityDate > " + rearrest_date_formatted + " Order By e.ActivityDate ASC limit 1";
    // alert(sqlString);
    var sql = sforce.connection.query(sqlString);
    if (sql.getBoolean("done") && sql.size!=0)
    {
        var rec = sql.getArray("records");
        return rec[0].get('Part__c');
    }
    else
    {
        return "N/A"
    }
}

// Translates the Borough to a County
function getCounty(boro)
{
    var county = new Array();
    county['Brooklyn'] = 'Kings County';
    county['Bronx'] = 'Bronx County';
    county['Queens'] = 'Queens County';
    county['Manhattan'] = 'New York County';
        county['Staten Island'] = 'Richmond County';
    if(county[boro] != '')
    {
        return county[boro];
    }
    else
    {
        return boro;
    }
}

function getAccount(case_info)
{
    // var sql = sforce.connection.query("Select c.Judge__c, c.Judge__r.AccountId , c.Judge__r.FirstName, c.Judge__r.LastName from Case_Information__c c Where c.ID = '"+case_info+"'");
    var sql = sforce.connection.query('SELECT Docket__r.Judge__c, Docket__r.Judge__r.AccountId, Docket__r.Judge__r.FirstName, Docket__r.Judge__r.LastName FROM Case_Relationship__c WHERE Docket__c = \'' + case_info + '\'');
    if (sql.getBoolean("done") && sql.size!=0)
    {
        var record = sql.getArray("records");
        if(record[0].get('Judge__r')==null)
        {
            return "N/A";
        }
        var account=record[0].get('Judge__r').get('AccountId');
        var sql = sforce.connection.query("Select a.Name from Account a Where a.ID = '"+account+"'");
        if (sql.getBoolean("done") && sql.size!=0)
        {
            var records = sql.getArray("records");
            return records[0].get('Name');
        }
    }
    else
    {
        return "N/A"
    }
}

// Fetches the information from the Intake Case (most recent one)
// Returns an Associative Array with Intake Case details
function getIntakeCase(clientID)
{
    // var sql = sforce.connection.query("Select c.RecordType.Name, c.RecordTypeId, c.Probation_Officer__c, c.Name, c.Judge__c, c.Intake_Date__c, c.Indictment__c, c.Intake_Approved_By__c, c.Id, c.Defense_Attorney_Law_Guardian__c, c.Current_Case_Status__c, c.Client__c, c.Case_Status_at_Intake__c, c.Borough__c From Case_Information__c c Where c.RecordType.Name LIKE 'Intake Case%' And c.Client__c = '" + clientID + "' Order By c.Intake_Date__c DESC LIMIT 1");
    // var sql = sforce.connection.query('SELECT Docket__r.RecordType.Name, Docket__r.RecordTypeId, Docket__r.Probation_Officer__c, Docket__r.Name, Docket__r.Judge__c, Contact__r.Intake_Date__c, Docket__r.Indictment__c, Contact__r.Intake_Approved_By__c, Docket__r.Id, Docket__r.Defense_Attorney_Law_Guardian__c, Docket__r.Current_Case_Status__c, Contact__c, Contact__r.Case_Status_at_Intake__c, Docket__r.Borough__c FROM Case_Relationship__c WHERE Docket__r.RecordType.Name LIKE \'Intake Case%\' AND Contact__c = \'' + clientID + '\' ORDER BY Contact__r.Intake_Date__c DESC LIMIT 1');

    var sql = sforce.connection.query('SELECT Intake_Case__r.RecordType.Name, Intake_Case__r.RecordTypeId, Intake_Case__r.Probation_Officer__c, Intake_Case__r.Name, Intake_Case__r.Judge__c, Intake_Date__c, Intake_Case__r.Indictment__c, Intake_Approved_By__c, Intake_Case__r.Id, Intake_Case__r.Defense_Attorney_Law_Guardian__c, Intake_Case__r.Current_Case_Status__c, Id, Case_Status_at_Intake__c, Intake_Case__r.Borough__c FROM Contact WHERE Id = \'' + clientID + '\' LIMIT 1');
    
    if (sql.getBoolean("done") && sql.size!=0)
    { //if done and at least one result
        var records = sql.getArray("records"); //get an array of records from query
        var intakeCase = records[0]; // copy the results into an array called arrestCase
        return intakeCase;
    }
    else
    {
        return null;
    }
}

// Fetches the next court date for the Intake Case
// Returns a Salesforce Date
function getIntakeCaseNextCourtDate(caseID)
{
    var sqlString = "Select e.WhoId, e.WhatId, e.RecordType.Name, e.RecordTypeId, e.ActivityDate From Event e Where e.RecordType.Name = 'Court Date' AND e.WhatId = '"+caseID+"' AND e.ActivityDate > " + getSFNowDate() + " Order By ActivityDate ASC LIMIT 1";
    var sql = sforce.connection.query(sqlString);
    if (sql.getBoolean("done") && sql.size!=0)
    { //if done and at least one result
        var records = sql.getArray("records"); //get an array of records from query
        return formatFromSFDate(records[0].get("ActivityDate"));
    }
    else
    {
        // If we can't find any dates past today, show the last Court Date we have for the Intake Case
        var sql = sforce.connection.query("Select e.WhoId, e.WhatId, e.RecordType.Name, e.RecordTypeId, e.ActivityDate From Event e Where e.RecordType.Name = 'Court Date' AND e.WhatId = '"+caseID+"' Order By ActivityDate DESC LIMIT 1");
        if (sql.getBoolean("done") && sql.size!=0)
        { //if done and at least one result
            var records = sql.getArray("records"); //get an array of records from query
            return formatFromSFDate(records[0].get("ActivityDate"));
        }
        else
        {
            return "N/A";
        }
    }
}

//run after page is initiated
function init()
{
    case_info = "{!$Request.caseID}"; // Fetch the CaseID from the QueryString
    var myResult = ''; // This will be used to push the final output to the page.
    // Query the Rearrest case
    var sql = sforce.connection.query("Select Contact__c, Docket__r.Id, Docket__r.Borough__c, Contact__r.Case_Status_at_Intake__c, Docket__r.Current_Case_Status__c, Docket__r.Name, Docket__r.Judge__c, Docket__r.Detention_Status_at_CC_Arraignment__c, Docket__r.Arrest_Date__c, Contact__r.Intake_Date__c, Docket__r.Indictment_Date__c, Docket__r.Indictment__c, Contact__r.Id, Case_Type__c from Case_Relationship__c WHERE Docket__r.Id = '"+case_info+"' LIMIT 1");

    console.log('init = ' + sql.getArray("records"));
    
    if (sql.getBoolean("done") && sql.size!=0)
    { //if done and at least one result
        var records = sql.getArray("records"); //get an array of records from query
        var arrestCase = records[0]; // copy the results into an array called arrestCase

        console.log(arrestCase);
        
        // Now, let's Query the Intake Case
        var intakeCase = getIntakeCase(arrestCase.Contact__c);
        
        var client= new Array();
        var client=getContactDetails(arrestCase.Contact__c);

        var judge = getValue('Contact', 'Name', intakeCase.Intake_Case__r.Judge__c);
        
        var sql = sforce.connection.query("Select u.LastName, u.FirstName, u.Name from User u WHERE u.Id = '{!$User.Id}' LIMIT 1");
        if (sql.getBoolean("done") && sql.size!=0)
        {
            var user=sql.getArray('records');
            var userName= user[0].get('Name');
        }
        
        // var rearrest = arrestCase["Docket__r.Arrest_Date__c"];
        var rearrest = arrestCase.Docket__r.Arrest_Date__c;
        var caseType = arrestCase.Case_Type__c;
        var arr = rearrest.split("-");
        rearrest = arr[1]+"/"+arr[2]+"/"+arr[0];
        
        // var intake_date = intakeCase["Intake_Date__c"];
        var intake_date = client["Next_Court_Date__c"];
        //getIntakeCaseNextCourtDate(intakeCase['Id'])
        var indictment = intakeCase.Intake_Case__r.Indictment__c;
        if(indictment==null)
        {
            indictment='';
        }
        
        var charges = getCharges(case_info);
        // var Part = getPart(arrestCase["Contact__c"], case_info, arrestCase["Docket__r.Arrest_Date__c"]);
        var Part = getPart(arrestCase.Contact__c, case_info, rearrest);
        
        
        
        // if(caseType == 'Post-Exit')
        if(caseType == 'In-Program')
        {
            myResult = myResult+'<table align="center" width="520"  style="page-break-after: always;">';
            myResult = myResult+'<tr><td class="black_text" style="width:100%;padding-bottom:0px;">CASES<br />The Court Employment Project</td></tr>';
            myResult = myResult+'<tr><td class="small_text" style="border-bottom:4px solid gray; padding-top:0px;">346 Broadway, New York, NY 10013<br />(212) 732 - 0076<td></tr>';
            myResult = myResult+'<tr><td style="padding-top:30px"><table border="0" width="480">';
            myResult = myResult+'<tr><td class="label">DATE : </td><td class="gray_text">'+getCurentDate()+'</td></tr>';
            //myResult = myResult+'<tr><td class="label">TO : </td><td class="gray_text">Honorable Justice '+judge+'<br />'+getAccount(intakeCase['Id'])+'<br />'+getCounty(arrestCase["Docket__r.Borough__c"])+' </td></tr>';
            myResult = myResult+'<tr><td class="label">TO : </td><td class="gray_text">Honorable Justice '+judge+'<br />'+getAccount(intakeCase['Id'])+'<br />'+getCounty(arrestCase.Docket__r.Borough__c)+' </td></tr>';
            myResult = myResult+'<tr><td class="label">RE : </td><td class="gray_text">'+client['gender']+' '+client['Name']+'\'s Rearrest<br />Intake Case Indictment #:&nbsp;&nbsp;'+indictment+'<br />Intake Case Court Date :&nbsp;&nbsp;&nbsp;'+intake_date+'</td></tr>';
            myResult = myResult+'</table></td></tr><tr><td><table cellpadding="0" cellspacing="0" style="border:1px solid gray;" width="100%">';
            myResult = myResult+'<tr><td class="black_text" style="border-right:1px solid gray;border-bottom:1px solid gray;">REARREST CASE</td><td></td><td></td></tr>';
            myResult = myResult+'<tr><td class="black_text">Docket Number</td><td class="separator">&nbsp;:&nbsp;</td><td class="gray_text">'+arrestCase.Docket__r.Name+'</td></tr>';
            myResult = myResult+'<tr><td class="black_text">Date of Rearrest</td><td class="separator">&nbsp;:&nbsp;</td><td class="gray_text">'+rearrest+'</td></tr>';
            myResult = myResult+'<tr><td class="black_text">County of Rearrest</td><td class="separator">&nbsp;:&nbsp;</td><td class="gray_text">'+getCounty(arrestCase.Docket__r.Borough__c)+'</td></tr>';
            myResult = myResult+'<tr><td class="black_text">Charges</td><td class="separator">&nbsp;:&nbsp;</td><td class="gray_text">'+charges+'</td></tr>';
            myResult = myResult+'<tr><td class="black_text">Bail Status</td><td class="separator">&nbsp;:&nbsp;</td><td class="gray_text">'+arrestCase.Docket__r.Detention_Status_at_CC_Arraignment__c+'</td></tr>';
            myResult = myResult+'<tr><td class="black_text">Court Part</td><td class="separator">&nbsp;:&nbsp;</td><td class="gray_text">'+Part+'</td></tr>';
            myResult = myResult+'<tr><td class="black_text">Status of Case</td><td class="separator">&nbsp;:&nbsp;</td><td class="gray_text">'+arrestCase.Docket__r.Current_Case_Status__c+'</td></tr></table></td></tr>';
            myResult = myResult+'<tr><td class="gray_text" style="text-indent:40px">We will monitor '+client['Name']+'\'s rearrest case and inform the Court of the status of this case as more information becomes available. We will also notify the Court of any change in '+client['Name']+'\'s status in our program.</td></tr>';
            myResult = myResult+'<tr><td style="padding-top:70px;"><table width="100%"><tr>';
            myResult = myResult+'<td class="gray_text" width="45%" style="border-top:2px solid gray;padding:0px">'+client['Team_Leader__c']+'<br />Case Management Director</td>';
            myResult = myResult+'<td width="10%"></td>';
            myResult = myResult+'<td class="gray_text" width="45%">&nbsp;</td>';
            // myResult = myResult+'<td class="gray_text" width="45%" style="border-top:2px solid gray;padding:0px">'+client['Court_Rep__c']+'<br />Case Manager</td>';
            myResult = myResult+'</tr></table></td></tr></table>';
            myResult = myResult+'<!-- <br><div align="center"><form><input type="button" value="Print this page" onClick="window.print()"></form></div> -->';
            
            
            console.log('CLIENT');
            console.log(client);
            
            // Second part of the Re-Arrest Letter
            myResult = myResult+'<table style="width: 100%" class="defaultStyle"><tr><td><table style="width: 100%" cellpadding="3"><tr><td><table style="width: 33%" align="center"><tr><td class="style1"><strong><span class="style4">CASES<br />Court Employment Project<br /></span></strong><span class="style3"></span><strong><span class="style4">Rearrest Check Report<br /></span></strong></td></tr></table></td></tr><td class="style5">REARREST CASE</td></tr>';
            myResult = myResult+'<tr><td><table style="width: 100%" class="style2" cellpadding="3"><tr><td><strong>CEP #:</strong></td><td>'+client['CEP_Num__c']+' '+client['LastName']+', '+client['FirstName']+'</td><td><strong>Requested</strong></td><td>'+formatFromSFDate(getSFNowDate())+' '+userName+'</td></tr>';
            myResult = myResult+'<tr><td><strong>Intake Borough:</strong></td><td>'+client.Borough_of_Intake_Formula__c+'</td><td><strong>Type</strong></td><td></td></tr></table></td></tr>';
            
            // get Re-Arrest cases
            console.log('GET RE-ARREST');
            console.log(arrestCase.Contact__c);
            console.log(case_info);
            sql = sforce.connection.query("SELECT Id, Contact__c, Contact__r.Intake_Case__c, Contact__r.Final_Outcome__c, Docket__r.Bail_Set_Bond__c, Docket__r.Bail_Set_Cash__c, Docket__r.Name, Docket__r.Arrest_Date__c, Docket__r.Criminal_Court_Arraignment_Date__c, Docket__r.RecordType.Name, Docket__r.Id, Docket__r.Borough__c, Docket__r.Detention_Status_at_CC_Arraignment__c, Case_Type__c, Docket__r.Indictment__c FROM Case_Relationship__c WHERE Contact__c = '"+arrestCase.Contact__c+"' and Docket__r.Id='"+case_info+"' and Case_Type__c = 'In-Program' order by Docket__r.Arrest_Date__c DESC");
            // AND Case_Type__c='Rearrest'
            if (sql.getBoolean("done") && sql.size!=0)
            {
                var cases = sql.getArray("records");

                console.log('CASES');
                console.log(cases);
                
                // foreach case we show the detail table
                for(var i=0;i<cases.length;i++)
                {
                        //sql = sforce.connection.query("Select e.Part__c, e.RecordType.Name, e.WhatId, e.Report_Type__c, e.Appearance_Required__c, e.ActivityDate, e.Outcome__c, e.Description, e.WhoId  from Event e where e.WhatId IN ('"+cases_id+"') order by ActivityDate ASC limit 1");
                        
                    // Get case charges
                    sql = sforce.connection.query("Select c.Charge__r.Id, c.Charge__r.Name, c.Charge__r.Class__c, c.Charge__r.Description__c, c.Type__c from Case_Charges__c c Where c.Docket_No__c = '"+cases[i].Docket__r.Id+"' Order By c.Type__c");
                    var charge= new Array();

                    if (sql.getBoolean("done") && sql.size!=0)
                    {
                        var charges = sql.getArray("records");

                        console.log('CHARGE');
                        console.log(charges);
                        
                        var x=-1;
                        var ok;
                        for(j=0;j<charges.length;j++)
                        {
                            ok=-1;
                            for(k=0;k<charge.length;k++)
                            {
                                if(charge[k]['type']==charges[j].get('Type__c'))
                                {
                                    ok=k;
                                    break;
                                }
                            }
                            if(ok==-1)
                            {
                                x=x+1;
                                charge[x]= new Array();
                                charge[x]['type']= charges[j].get('Type__c');
                                charge[x]['values']= new Array();
                                charge[x]['values'][0]= new Array();
                                charge[x]['values'][0]['number']=charges[j].get('Charge__r').get('Name');
                                var myClass1 = charges[j].get('Charge__r').get('Class__c');
                                if(myClass1)
                                {
                                    charge[x]['values'][0]['class'] = myClass1 ;
                                } else
                                {
                                    charge[x]['values'][0]['class'] = '';
                                }
                                charge[x]['values'][0]['description']= charges[j].get('Charge__r').get('Description__c');
                                // charge[x]['values'][0]['description']=charges[j].get('Charge__r').get('Class__c')+' '+charges[j].get('Charge__r').get('Description__c');
                            }
                            else
                            {
                                var next=charge[ok]['values'].length;
                                charge[ok]['values'][next]= new Array();
                                charge[ok]['values'][next]['number']=charges[j].get('Charge__r').get('Name');
                                var myCharge = charges[j].get('Charge__r').get('Class__c');
                                if(myCharge)
                                {
                                    charge[ok]['values'][next]['class'] = myCharge ;
                                } else 
                                {
                                    charge[ok]['values'][next]['class'] = '';
                                }
                                charge[ok]['values'][next]['description']= charges[j].get('Charge__r').get('Description__c');
                                // charge[ok]['values'][next]['description']=charges[j].get('Charge__r').get('Class__c')+' '+charges[j].get('Charge__r').get('Description__c');
                            }
                        }
                    }
                    
                    var case_indictment=cases[i].Docket__r.Indictment__c;
                    if(case_indictment==null)
                    {
                        case_indictment='';
                    }
                    
                    // Rearest cases
                    myResult = myResult+'<tr><td>';
                    myResult = myResult+'<table style="width: 100%" cellpadding="3" class="style2"><tr><td><strong>Docket #</strong></td><td>'+cases[i].Docket__r.Name+'</td><td><strong>Indictment #:</strong></td><td>'+case_indictment+'</td><td><strong>Arrest Borough:</strong></td><td>'+cases[i].Docket__r.Borough__c+'</td></tr></table></td></tr>';
                    myResult = myResult+'<tr><td><table style="width: 100%">';
                    myResult = myResult+'<tr><td class="style1"><strong>DATE</strong></td><td colspan="2" class="style1"><strong></strong></td><td colspan="2" class="style1"><strong>Next Court</strong></td></tr>';
                    myResult = myResult+'<tr><td class="style1"><strong></strong></td><td class="style1"><strong></strong></td><td class="style1"><strong></strong></td><td class="style1"><strong>Date</strong></td><td class="style1"><strong>Part</strong></td></tr>';
                    
                    for(j=0;j<charge.length;j++)
                    {
                        if(charge[j]['type']=='Arrest Charges' && charge[j]['values'].length>0)
                        {
                            myResult = myResult+'<tr><td>'+formatFromSFDate(cases[i].Docket__r.Arrest_Date__c)+'</td><td><strong>Arrested</strong></td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>';
                            //myResult = myResult+'<tr><td width="59%"><span class="fieldLabel">'+charge[j]['type']+'</span></td><td width="17%"><span class="fieldLabel">Class</span></td><td width="24%"><span class="fieldLabel">&nbsp;</span></td></tr>';
                            for(k=0;k<charge[j]['values'].length;k++)
                            {
                                myResult = myResult+'<tr><td>&nbsp;</td><td>'+charge[j]['values'][k]['number']+'</td><td>'+charge[j]['values'][k]['description']+' '+charge[j]['values'][k]['class']+'</td><td>&nbsp;</td><td>&nbsp;</td></tr>';
                                //myResult = myResult+'<tr><td width="59%">'+charge[j]['values'][k]['number']+'</td><td width="17%">'+charge[j]['values'][k]['class']+'</td><td width="24%">'+charge[j]['values'][k]['description']+'</td></tr>';
                            }
                        }
                    }

                    for(j=0;j<charge.length;j++)
                    {
                        if(charge[j]['type']=='Criminal Court Arraignment Charges' && charge[j]['values'].length>0)
                        {
                            myResult = myResult+'<tr><td>'+formatFromSFDate(cases[i].Docket__r.Criminal_Court_Arraignment_Date__c)+'</td><td><strong>Arraignment</strong></td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>';
                            //myResult = myResult+'<tr><td width="59%"><span class="fieldLabel">'+charge[j]['type']+'</span></td><td width="17%"><span class="fieldLabel">Class</span></td><td width="24%"><span class="fieldLabel">&nbsp;</span></td></tr>';
                            for(k=0;k<charge[j]['values'].length;k++)
                            {
                                myResult = myResult+'<tr><td>&nbsp;</td><td>'+charge[j]['values'][k]['number']+'</td><td>'+charge[j]['values'][k]['description']+' '+charge[j]['values'][k]['class']+'</td><td>&nbsp;</td><td>&nbsp;</td></tr>';
                                //myResult = myResult+'<tr><td width="59%">'+charge[j]['values'][k]['number']+'</td><td width="17%">'+charge[j]['values'][k]['class']+'</td><td width="24%">'+charge[j]['values'][k]['description']+'</td></tr>';
                            }
                        }
                    }
                    
                    var next_court_date='';
                    var next_court_part='';
                    var outcome='';
                    var action='';
                                        
                    sql = sforce.connection.query("Select e.Part__c, e.RecordType.Name, e.WhatId, e.Report_Type__c, e.ActivityDate, e.Outcome__c, e.Description, e.Action__c, e.WhoId  from Event e where  e.RecordType.Name = 'Court Date' AND e.WhatId='"+cases[i].Contact__r.Intake_Case__c+"' AND e.ActivityDate >= "+getSFNowDate()+" order by ActivityDate ASC limit 1");
                    if (sql.getBoolean("done") && sql.size!=0)
                    {
                        var last_event = sql.getArray("records");
                        last_event = last_event[0];
                        
                        console.log(last_event);
                        console.log(cases[i].Contact__r.Intake_Case__c);
                        console.log(getSFNowDate());
                        
                        next_court_date = formatFromSFDate(last_event.ActivityDate);
                        next_court_part = last_event.Part__c;
                        if(next_court_part == null) { next_court_part = 'Not Entered'; }
                        outcome = last_event.Outcome__c;
                        
                        if(outcome=='Pending')
                        {
                            outcome = 'Adjourned';
                        }
                        if(outcome=='Final Disposition')
                        {
                            outcome = outcome +'  -  '+ last_event.Action__c;
                        }
                        
                    }
                    
                    // Set bail output
                    var bail='';
                    if(cases[i].Docket__r.Bail_Set_Cash__c)
                    {
                        bail='$'+formatNumber(parseFloat(cases[i].Docket__r.Bail_Set_Cash__c).toFixed(2),2,',','.','','','-','');
                    }
                    
                    if(cases[i].Docket__r.Bail_Set_Bond__c)
                    {
                        if(bail)
                        {
                            bail= bail+' / ';
                        }
                        bail= bail + '$' + formatNumber(parseFloat(cases[i].Docket__r.Bail_Set_Bond__c).toFixed(2),2,',','.','','','-','');
                    }
                    
                    myResult = myResult+'<tr><td>&nbsp;</td><td><strong>'+cases[i].Docket__r.Detention_Status_at_CC_Arraignment__c+ '</strong></td><td><strong>'+bail+'</strong></td><td>&nbsp;</td><td>&nbsp;</td></tr>';
                    myResult = myResult+'<tr><td>&nbsp;</td><td colspan="2"><strong>'+outcome+'</strong></td><td>'+((next_court_date!='')?next_court_date:'')+'</td><td>'+next_court_part+'</td></tr>';
                    myResult = myResult+'</table></td></tr>';
                    myResult = myResult+'<tr><td><table style="width: 100%"><tr><td>Printed: '+formatFromSFDate(getSFNowDate())+'</td><td></td></tr></table></td></tr>';
                }
            }
            myResult = myResult+'</table>';
        }
        else
        {
            // This is not a Re-Arrest Case, so we don't generate the letter
            myResult = "This is not a Rearrest case! We are unable to generate the Rearrest letter. If this is indeed a Rearrest case, please set the Case Type correctly.";
        }
    }
    else
    { //otherwise no values found
        // myResult = "N/A"; //denote there are no values
        myResult = case_info;
    }
    document.getElementById("resultZone").innerHTML = myResult; //push value to the screen
}

</script>
</head>
<body style="background-color: #FFFFFF;" onLoad="init()">
    <div id="resultZone">Loading ...</div>
</body>
</html>

</apex:page>